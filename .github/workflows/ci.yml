name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install dev tools
        run: |
          python -m pip install flake8 black pytest

      - name: Run linters
        run: |
          black --check .
          flake8

      - name: Run tests
        run: |
          pytest -q

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and run Docker containers
        run: docker-compose up -d --build

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for PostgreSQL..."
          until docker-compose exec -T postgres pg_isready -U postgres; do
            sleep 5
          done
          echo "PostgreSQL is ready."

          echo "Waiting for Ollama..."
          until docker-compose exec -T ollama ollama list; do
            sleep 5
          done
          echo "Ollama is ready."

      - name: Create test document
        run: |
          mkdir -p data/documents
          echo "This is a test PDF." > data/documents/test.pdf

      - name: Run integration test
        run: |
          docker-compose exec -T streamlit python -m pytest tests/test_integration.py

      - name: Shutdown Docker containers
        if: always()
        run: docker-compose down
